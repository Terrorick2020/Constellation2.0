services:
  client:
    image: ${DOCKER_USER}/app_constellation:latest
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - planner_network
    ports:
      - '4173:80'
    env_file:
      - app/.env

  api:
    image: ${DOCKER_USER}/api_constellation:latest
    restart: unless-stopped
    ports:
      - 4200:4200
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    depends_on:
      - db
      - redis
    env_file:
      - ./api/.env
    volumes:
      - files:/app/files
      - keys:/app/keys
      - stamped_files:/app/stamped_files
    networks:
      - planner_network

  ws:
    image: ${DOCKER_USER}/ws_constellation:latest
    ports:
      - 7000:7000
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    depends_on:
      - redis
    restart: unless-stopped
    env_file:
      - ./ws/.env
    networks:
      - planner_network

  db:
    image: postgres
    restart: unless-stopped
    volumes:
      - ./db_data:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    networks:
      - planner_network

  nginx:
    container_name: proxy_nginx
    depends_on:
      - api
      - db
    image: nginx:latest
    ports:
      - '80:80'
    env_file:
      - .env
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    networks:
      - planner_network

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - planner_network
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env

volumes:
  files:
  stamped_files:
  keys:
  redis_data:

networks:
  planner_network:
    driver: bridge
