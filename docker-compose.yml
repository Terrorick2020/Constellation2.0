services:
  api:
    build: ./api
    ports:
      - 4200:4200
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    depends_on:
      - db
      - redis
    restart: always
    env_file:
      - ./api/.env
    volumes:
      - files:/app/files
      - keys:/app/keys
      - stamped_files:/app/stamped_files
    networks:
      - planner_network

  db:
    image: postgres
    restart: unless-stopped
    volumes:
      - ./db_data:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    networks:
      - planner_network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    networks:
      - planner_network

  nginx:
    container_name: proxy_nginx
    depends_on:
      - api
      - db
    image: nginx:latest
    ports:
      - '80:80'
    env_file:
      - .env
    volumes:
      - ./nginx:/etc/nginx/conf.d
    restart: always
    networks:
      - planner_network

  # app:
  #   build:
  #     context: ./app
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - db
  #     - api
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./dist:/app/dist
  #   networks:
  #     - planner_network

  # pgadmin:
  #   container_name: pgadmin
  #   depends_on:
  #     - db
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@mail.ru
  #     PGADMIN_DEFAULT_PASSWORD: aaa000
  #   expose:
  #     - '80'
  #   restart: always
  #   networks:
  #     - planner_network

  # redis:
  #   image: redis:alpine
  #   restart: unless-stopped
  #   networks:
  #     - planner_network
  #   environment:
  #     - REDIS_PASSWORD=${REDIS_PASSWORD}
  #   ports:
  #     - 6379:6379

  
  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - planner_network
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env\

volumes:
  files:
  stamped_files:
  keys:

networks:
  planner_network:
    driver: bridge
