<template>
  <div class="flex flex-col w-full">
    <!-- Поле поиска -->
    <el-input
      v-model="searchQuery"
      size="large"
      placeholder="Поиск по названию и др...."
      class="h-[60px] max-w-full lg:max-w-[935px]"
    >
      <template #prefix>
        <SvgoSearch filled class="h-6 w-[30px]" :font-controlled="false" />
      </template>
    </el-input>

    <!-- Контейнер для карточек -->
    <div class="item-container">
      <el-card
        v-for="o in filteredUsers"
        :key="o"
        class="user-card"
        shadow="always"
      >

        <div class="user-card-content">
          <el-avatar :size="48" :src="Avatar" class="border border-black/15" />
          <div>
            <h4 class="user-name">{{ o }}</h4>
            <h5 class="user-fio">Тараскин Илья Дмитриевич</h5>
          </div>
          <NuxtLink :to="`/profiles/${o}`">
            <el-button class="profile-description" >
              <span class="mr-2 text-[#ffffff]">Перейти к профилю</span>
              <el-icon>
                  <Right class="text-[#ffffff]" />
              </el-icon>
            </el-button>
            
          </NuxtLink>
        </div>
      </el-card>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, computed, watch } from 'vue';
import Avatar from '~/assets/image/avatar.png'
import { Right } from '@element-plus/icons-vue'


const searchQuery = ref('');

const users = ['User 1', 'User 2', 'User 3', 'User 4', 'User 5', 'User 7', 'User 8', 'User 9', 'User 10',
              'User 11', 'User 12', 'User 13', 'User 14', 'User 15', 'User 17', 'User 18', 'User 19', 'User 20'];

const filteredUsers = ref<string[]>(users);

const filterUsers = () => {
  filteredUsers.value = users.filter(user =>
    user.toLowerCase().includes(searchQuery.value.toLowerCase())
  );
};

let timeout: ReturnType<typeof setTimeout>;

// Watcher для searchQuery с задержкой 500 мс
watch(searchQuery, (newQuery) => {
  clearTimeout(timeout); 
  timeout = setTimeout(() => {
    filterUsers();
  }, 500); 
});
</script>

<style scoped lang="scss">
// rename to prevent conflicts
.search {
  margin-top: 7px;
  color: #555;
}

.item {
  font-size: 17px;
  color: #555;
  margin-left: 10px;
}

.item-container {
  margin-top: 20px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  
}

.user-card {
  
  padding: 5px;
  background-color: #f7f7f7;
  border-radius: 20px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}



.user-card-content{
  display: flex; 
  align-items: center;

  .user-name{
    margin-left: 35px; 
    font-size: 18px;
    color: #333;
    
  }
  .user-fio{
    margin-left: 35px; 
    font-size: 15px;
    color: #333;
    
  }
  .profile-description{
    margin-left: 380px; 
    font-size: 15px;
    color: #333;
    background-color: #FF6C46;
    border-radius: 7px;
  }
}

</style>
