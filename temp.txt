<template>
  <div class="flex w-full flex-col">
    <div class="mb-5 flex flex-col gap-[10px] lg:flex-row">
      <el-input
        size="large"
        placeholder="Поиск по названию и др...."
        class="h-[60px] max-w-full lg:max-w-[635px]"
      >
        <template #prefix>
          <SvgoSearch filled class="h-6 w-[30px]" :font-controlled="false" />
        </template>
      </el-input>
      <div class="flex items-center gap-x-[10px] grow">
        <Filters />
        <Sort />
      </div>
    </div>

    <div class="space-y-[100px]">
      <div class="flex w-full flex-col gap-[10px]" v-for="companyIndex in 5">
        <Company index-page />
        <div class="border border-black/15 p-4 flex flex-col gap-y-[20px] bg-white rounded-2xl">
          <div class="flex flex-col gap-[10px]">
            <h2 class="text-xs font-extrabold text-black/50 uppercase leading-[110%]">
              Количество людей, подписавших документ
            </h2>
            <div class="demo-progress">
              <el-progress
                :percentage="percentage"
                :stroke-width="15"
                status="success"
                striped
                striped-flow 
                :duration="duration"
                :text-inside="true"
              />
            </div>
            <p class="text-sm text-gray-500">Подписали: {{ signedUsers }} из {{ totalUsers }}</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { computed, ref, onMounted } from 'vue'
import axios from 'axios'

const signedUsers = ref<number>(0)  // Количество подписавших
const totalUsers = ref<number>(100) // Общее количество пользователей (можно динамически задавать)
const percentage = computed(() => Math.floor((signedUsers.value / totalUsers.value) * 100))
const duration = computed(() => Math.floor(percentage.value / 5))

// Функция для загрузки данных с бэкенда
const fetchSignedUsers = async () => {
  try {
    const response = await axios.get('/api/signed-users') // Заменить на реальный эндпоинт
    signedUsers.value = response.data.signedUsers
    totalUsers.value = response.data.totalUsers
  } catch (error) {
    console.error('Ошибка при загрузке данных:', error)
  }
}

// Загружаем данные при монтировании компонента
onMounted(fetchSignedUsers)
</script>

<style scoped>
.demo-progress .el-progress--line {
  margin-bottom: 15px;
  max-width: 600px;
  border: 2px solid black;
  border-radius: 15px;
}
</style>


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

fileters index,vue кнопка фильтров

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



myoffers.vue исходник
<template>
<div class="flex flex-col w-full flex-col gap-[20px] pt-1 my-offers-container">
    <h1 class="text-2xl font-bold mt-2">Мои обьявления</h1>
    <div class="flex w-full gap-7">
        <div class="flex flex-col gap-3 w-full">
            <div id="my-offer-header" class="flex flex-wrap gap-4 w-[540px] h-[60px]">    
                <div class="basic-block cursor-pointer flex items-center w-full justify-start" style="padding-left: 10px;"><span class="flex gap-5" style="padding-left: 20px;"><span class="font-bold">Активные</span><span>Архивные</span></span></div>
                <Sort />

                <!-- <div id="balance-offer-mobile" class="flex flex-col gap-2 ">
                    <div class="offers-balance basic-block flex flex-col gap-4" style="padding:30px; max-height: 192px;">
                        <div class="flex flex-col gap-1">
                            <span class="font-bold text-xs">Баланс предложений</span>
                            <span class="font-bold text-2xl">20</span>
                        </div>

                        <el-button class="btn-classic w-full" style="border-radius: 200px;">Купить предложения</el-button>
                    </div>
                    <el-button round :icon="SVGPlus" class="btn-empty" style="font-weight: 900; background-color: rgb(244 244 244 / var(--tw-bg-opacity));">Новое предложение</el-button>
                </div> -->
            </div>
            <div class="offer-info basic-block bg-white flex flex-col gap-4">
                <div class="flex flex-col gap-2">
                    <h2 class="text-lg font-bold">Документ 1</h2>
                    <!-- <div class="flex gap-5">
                        <span class="text-sm"><b>12</b> дней осталось</span>
                        <span class="text-sm"><b>123123</b> откликов</span>
                        <span class="text-sm"><b>123123</b> просмотров</span>
                    </div> -->
                </div>
                <div>
                    <el-button round :icon="SVGEdit" class="btn-empty" style="font-weight: 900;">Перейти к документу</el-button>
                    <!-- <el-button round class="btn-empty is-circle"><SvgoLink/></el-button> -->
                </div>
            </div>
            <div class="offer-info basic-block bg-white flex flex-col gap-4 justify-between">
                <div class="flex flex-col gap-2">
                    <h2 class="text-lg font-bold">Документ 2</h2>
                    <!-- <div class="flex gap-5">
                        <span class="text-sm"><b>12</b> дней осталось</span>
                        <span class="text-sm"><b>123123</b> откликов</span>
                        <span class="text-sm"><b>123123</b> просмотров</span>
                    </div> -->
                </div>
                <div>
                    <el-button round :icon="SVGEdit" class="btn-empty" style="font-weight: 900;">Перейти к документу</el-button>
                    <!-- <el-button round class="btn-empty is-circle"><SvgoLink/></el-button> -->
                </div>
            </div>
            <div class="offer-info basic-block bg-white  flex flex-col gap-4">
                <div class="flex flex-col gap-2">
                    <h2 class="text-lg font-bold">Документ 3</h2>
                    <!-- <div class="flex gap-5">
                        <span class="text-sm"><b>12</b> дней осталось</span>
                        <span class="text-sm"><b>123123</b> откликов</span>
                        <span class="text-sm"><b>123123</b> просмотров</span>
                    </div> -->
                </div>
                <div>
                    <el-button round :icon="SVGEdit" class="btn-empty" style="font-weight: 900;">Перейти к документу</el-button>
                    <!-- <el-button round class="btn-empty is-circle"><SvgoLink/></el-button> -->
                </div>
            </div>
        </div>
        <div id="balance-offer" class="flex flex-col gap-2" >
            <div class="basic-block w-[345px] flex flex-col gap-4" style="padding:30px; max-height: 192px; background-color: #00FFFF;">
                <div class="flex flex-col gap-1">
                    <span class="font-bold text-xs">Количство уведомлений</span>
                    <span class="font-bold text-2xl">3</span>
                </div>

                <!-- <el-button class="btn-classic w-full" style="border-radius: 200px;">Купить предложения</el-button> -->
            </div>
            <!-- <el-button round :icon="SVGPlus" class="btn-empty" style="font-weight: 900; background-color: rgb(244 244 244 / var(--tw-bg-opacity));">Новое предложение</el-button> -->
        </div>
    </div>
</div>
</template>

<script setup lang="ts">
import SVGEdit from '@/assets/icons/edit.svg'
import SVGPlus from '@/assets/icons/plus.svg'

</script>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
myoffers.vue новое

<template>
    <div class="flex flex-col w-full gap-[20px] pt-1 my-offers-container">
      <h1 class="text-2xl font-bold mt-2">Мои обьявления</h1>
      <div class="flex w-full gap-7">
        <div class="flex flex-col gap-3 w-full">
          <div id="my-offer-header" class="flex flex-wrap gap-4 w-[540px] h-[60px]">
            <div class="basic-block cursor-pointer flex items-center w-full justify-start" style="padding-left: 10px;">
              <span class="flex gap-5" style="padding-left: 20px;">
                <span
                  :class="{'font-bold': isActive, 'text-gray-500': !isActive}"
                  @click="toggleTab(true)"
                  >Активные</span
                >
                <span
                  :class="{'font-bold': !isActive, 'text-gray-500': isActive}"
                  @click="toggleTab(false)"
                  >Архивные</span
                >
              </span>
            </div>
            <Sort />
          </div>
  
          <!-- Переключаем содержимое в зависимости от вкладки -->
          <div v-if="isActive">
            <!-- Активные объявления -->
            <div class="offer-info basic-block bg-white flex flex-col gap-4">
              <div class="flex flex-col gap-2">
                <h2 class="text-lg font-bold">Документ 1</h2>
              </div>
              <div>
                <el-button
                  round
                  :icon="SVGEdit"
                  class="btn-empty"
                  style="font-weight: 900;"
                  >Перейти к документу</el-button
                >
              </div>
            </div>
  
            <div class="offer-info basic-block bg-white flex flex-col gap-4">
              <div class="flex flex-col gap-2">
                <h2 class="text-lg font-bold">Документ 2</h2>
              </div>
              <div>
                <el-button
                  round
                  :icon="SVGEdit"
                  class="btn-empty"
                  style="font-weight: 900;"
                  >Перейти к документу</el-button
                >
              </div>
            </div>
  
            <div class="offer-info basic-block bg-white flex flex-col gap-4">
              <div class="flex flex-col gap-2">
                <h2 class="text-lg font-bold">Документ 3</h2>
              </div>
              <div>
                <el-button
                  round
                  :icon="SVGEdit"
                  class="btn-empty"
                  style="font-weight: 900;"
                  >Перейти к документу</el-button
                >
              </div>
            </div>
          </div>
  
          <div v-else>
            <!-- Архивные объявления -->
            <div class="offer-info basic-block bg-white flex flex-col gap-4">
              <div class="flex flex-col gap-2">
                <h2 class="text-lg font-bold">Документ 2 (Архив)</h2>
              </div>
              <div>
                <el-button
                  round
                  :icon="SVGEdit"
                  class="btn-empty"
                  style="font-weight: 900;"
                  >Перейти к документу</el-button
                >
              </div>
            </div>
  
            <div class="offer-info basic-block bg-white flex flex-col gap-4">
              <div class="flex flex-col gap-2">
                <h2 class="text-lg font-bold">Документ 3 (Архив)</h2>
              </div>
              <div>
                <el-button
                  round
                  :icon="SVGEdit"
                  class="btn-empty"
                  style="font-weight: 900;"
                  >Перейти к документу</el-button
                >
              </div>
            </div>
          </div>
        </div>
  
        <!-- Блок уведомлений, который зависит от вкладки -->
        <div id="balance-offer" class="flex flex-col gap-2">
          <div
            class="basic-block w-[345px] flex flex-col gap-4"
            style="padding: 30px; max-height: 192px; background-color: #00FFFF;"
          >
            <div class="flex flex-col gap-1">
              <span class="font-bold text-xs">Количество уведомлений</span>
              <!-- Отображаем количество уведомлений в зависимости от вкладки -->
              <span class="font-bold text-2xl">{{ isActive ? activeNotifications : archivedNotifications }}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </template>
  
  <script setup lang="ts">
  import { ref } from 'vue'
  import SVGEdit from '@/assets/icons/edit.svg'
  import SVGPlus from '@/assets/icons/plus.svg'
  
  // Состояние для отслеживания активной вкладки (активные или архивные)
  const isActive = ref(true) // По умолчанию показываем "активные"
  
  // Количество уведомлений для каждой вкладки
  const activeNotifications = ref(3) // Количество уведомлений для активных
  const archivedNotifications = ref(2) // Количество уведомлений для архивных
  
  // Метод для переключения вкладки
  const toggleTab = (isActiveTab: boolean) => {
    isActive.value = isActiveTab
  }
  </script>
  
  <style scoped>
  /* Стили для вкладок, активные и архивные */
  #my-offer-header span:hover {
    cursor: pointer;
  }
  
  .basic-block {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 20px;
  }
  </style>
  


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
исходник для offers.vue
<template>
  <div class="flex w-full flex-col gap-[30px]">
    <div class="flex flex-col gap-1">
      <div class="flex flex-col gap-2 lg:flex-row">
        <div class="el-input el-input--large el-input--prefix">
          <div class="el-input__wrapper" tabindex="-1">
            <span class="el-input__prefix"
              ><span class="el-input__prefix-inner"
                ><i class="el-icon el-input__icon"
                  ><svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    class="nuxt-icon nuxt-icon--fill"
                  >
                    <g data-name="Layer 2">
                      <path
                        d="m20.71 19.29-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 11a6 6 0 1 1 6 6 6 6 0 0 1-6-6z"
                        data-name="search"
                      ></path>
                    </g></svg></i></span></span
            ><input
              class="el-input__inner"
              type="text"
              autocomplete="off"
              tabindex="0"
              placeholder="Поиск по названию и др...."
              id="el-id-1024-9"
            />
          </div>
        </div>
        <Filters />
        <Sort />
        <nuxt-link href="/myoffers"
          ><el-button class="btn-classic !hidden cursor-pointer lg:!block"
            >Мои обьявления</el-button
          ></nuxt-link
        >
      </div>

      <!-- Here was Rostov-on-Don item -->
       
      <!-- <div class="el-select__selected-item">
        <span
          class="el-tag is-closable el-tag--info el-tag--default el-tag--light"
          style="max-width: 293px; background-color: rgb(144 144 144 / var(--tw-bg-opacity))"><span class="el-tag__content">
            <span class="el-select__tags-text">Ростов-на-Дону</span></span>
          <i class="el-icon el-tag__close"
            ><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024">
              <path
                fill="currentColor"
                d="M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"
              ></path></svg></i
        ></span>
      </div> -->
    </div>
    <div class="flex flex-wrap justify-between gap-7">
      <Offer />
      <Offer />
      <Offer />
      <Offer />
      <Offer />
    </div>
  </div>
</template>

<script setup lang="ts">
const i18n: any = useI18n()
const lang = i18n.locale.value

const title = i18n.messages.value[lang].offersPage?.docTitle
const desc = i18n.messages.value[lang].offersPage?.docDesc

useSeoMeta({
  title: title,
  ogTitle: title,
  description: desc,
  ogDescription: desc
})
</script>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------