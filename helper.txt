client = npm run dev 
server = npm run start:dev




const SubscribeDoc = async () => {
  try {
    const formData = new FormData();
    formData.append('postId', props.docId);
    formData.append('file', pdfFile.value);

    const subscribeCurrentDoc = await axios.post(`${BASE_URL}/signature/create`, formData, {
      headers: {
        'Content-Type': 'multipart/form-data'
      }
    });

    console.log("Подпись успешно создана:", subscribeCurrentDoc.data);

    // После того как подпись будет создана, обновим поле в базе данных
    await updateSignatureInDatabase(props.docId);

  } catch (error) {
    console.error("Ошибка при создании подписи:", error);
  }
};

// Функция для обновления значения столбца signature в PostgreSQL
const updateSignatureInDatabase = async (postId) => {
  try {
    await axios.put(`${BASE_URL}/post/${postId}`, {
      signature: true // Обновляем столбец signature на true
    });
    console.log("Подпись в базе данных обновлена");
  } catch (error) {
    console.error("Ошибка при обновлении подписи в базе данных:", error);
  }
};
